2021/07/08 13:17:31 reflow version: reflow1.6.0 (go1.13.15)
2021/07/08 13:17:31 run ID: 7e37fbf6
2021/07/08 13:17:31 evaluating program /home/niema/ViReflow-Paper/data/sarscov2/n1/n1.r09.rf
	(no params)
	(no arguments)
2021/07/08 13:17:31 Trace: /home/niema/.reflow/runs/7e37fbf6a0879b90996e3a003c7cf31cfc3de796d2f583f177775f2e71f46a74.trace
2021/07/08 13:17:31 evaluating with configuration: scheduler *sched.Scheduler snapshotter blob.Mux transferer *repository.Manager repository *blobrepo.Repository,url=s3://niema-test-quickstart-cache/ assoc *dydbassoc.Assoc,TableName=niema-test-quickstart flags cacheextern,nocache,nogc,norecomputeempty,topdown flowconfig hashv2 cachelookuptimeout 20m0s imagemap map[] dotwriter(*os.File)
2021/07/08 13:17:32 scheduler task 5fc9f9e3 (flow 8a2bccd0): submitted with execconfig exec image niemasd/vireflow:latest cmd "\n        # Copy input files locally\n        mkdir \"n1.r09.s1_output\"\n        wget -O \"n1.r09.s1_output/n1.r09.s1.reference.fas\" \"https://raw.githubusercontent.com/niemasd/ViReflow/main/demo/NC_045512.2.fas\"\n        wget -O \"n1.r09.s1_output/n1.r09.s1.reference.gff\" \"https://raw.githubusercontent.com/niemasd/ViReflow/main/demo/NC_045512.2.gff3\"\n        wget -O \"n1.r09.s1_output/n1.r09.s1.primers.bed\" \"https://raw.githubusercontent.com/niemasd/ViReflow/main/demo/sarscov2_v2_primers_swift.bed\"\n        cp \"%s\" \"n1.r09.s1_output/n1.r09.s1.fq1.fastq\"\n        cp \"%s\" \"n1.r09.s1_output/n1.r09.s1.fq2.fastq\"\n\n        # Map reads using minimap2\n        minimap2 -t 1 -a -x sr \"n1.r09.s1_output/n1.r09.s1.reference.fas\" \"n1.r09.s1_output/n1.r09.s1.fq1.fastq\" \"n1.r09.s1_output/n1.r09.s1.fq2.fastq\" | samtools view -bS - > \"n1.r09.s1_output/n1.r09.s1.untrimmed.bam\"\n\n        # Sort mapped reads\n        samtools sort --threads 1 -O bam -o \"n1.r09.s1_output/n1.r09.s1.untrimmed.sorted.bam\" \"n1.r09.s1_output/n1.r09.s1.untrimmed.bam\" 1>&2\n\n        # Trim mapped reads using ivar\n        ivar trim -x 5 -e -i \"n1.r09.s1_output/n1.r09.s1.untrimmed.sorted.bam\" -b \"n1.r09.s1_output/n1.r09.s1.primers.bed\" -p \"n1.r09.s1_output/n1.r09.s1.trimmed\" 1>&2\n\n        # Sort trimmed mapped reads\n        samtools sort --threads 1 -O bam -o \"n1.r09.s1_output/n1.r09.s1.trimmed.sorted.bam\" \"n1.r09.s1_output/n1.r09.s1.trimmed.bam\" 1>&2\n\n        # Generate pile-up from sorted trimmed BAM\n        samtools mpileup -A -aa -d 0 -Q 0 --reference \"n1.r09.s1_output/n1.r09.s1.reference.fas\" \"n1.r09.s1_output/n1.r09.s1.trimmed.sorted.bam\" > \"n1.r09.s1_output/n1.r09.s1.pileup.txt\"\n\n        # Call variants using lofreq\"\n        lofreq call -f \"n1.r09.s1_output/n1.r09.s1.reference.fas\" --call-indels \"n1.r09.s1_output/n1.r09.s1.trimmed.sorted.bam\" > \"n1.r09.s1_output/n1.r09.s1.variants.vcf\"\n\n        # Call depth from trimmed BAM\n        samtools depth -d 0 -Q 0 -q 0 -aa \"n1.r09.s1_output/n1.r09.s1.trimmed.sorted.bam\" > \"n1.r09.s1_output/n1.r09.s1.depth.txt\"\n\n        # Find low-depth regions\n        low_depth_regions \"n1.r09.s1_output/n1.r09.s1.depth.txt\" \"n1.r09.s1_output/n1.r09.s1.low_depth.tsv\" 10 1>&2\n\n        # Generate consensus sequence\n        alt_vars.py -i \"n1.r09.s1_output/n1.r09.s1.variants.vcf\" -o tmp.vcf -v lofreq\n        bgzip tmp.vcf\n        bcftools index tmp.vcf.gz\n        cat \"n1.r09.s1_output/n1.r09.s1.reference.fas\" | bcftools consensus -m \"n1.r09.s1_output/n1.r09.s1.low_depth.tsv\" tmp.vcf.gz > \"n1.r09.s1_output/n1.r09.s1.consensus.fas\"\n\n        # Remove redundant output files before compressing\n        rm */*trimmed.bam\n\n        # Compress output files\n        tar cvf - \"n1.r09.s1_output\" | pigz -1 -p 1 > \"%s\"\n    " args [val<.=s3://niema-test/n1/r09/n1.r09.s1_R1.fastq 35.4MiB>, val<.=s3://niema-test/n1/r09/n1.r09.s1_R2.fastq 35.4MiB>, out[0]] resources {mem:1.0GiB cpu:1 disk:0B}
2021/07/08 13:18:35 scheduler task 5fc9f9e3 (flow 8a2bccd0): assigning to alloc ec2-18-191-78-150.us-east-2.compute.amazonaws.com:9000/d1e2c64981855ad8 available {mem:0B cpu:0 disk:1.0GiB}
2021/07/08 13:18:35 scheduler task 5fc9f9e3 (flow 8a2bccd0): loading (try 0): started
2021/07/08 13:18:35 scheduler task 5fc9f9e3 (flow 8a2bccd0): loading val<.=s3://niema-test/n1/r09/n1.r09.s1_R2.fastq 35.4MiB>
2021/07/08 13:18:35 scheduler task 5fc9f9e3 (flow 8a2bccd0): loading val<.=s3://niema-test/n1/r09/n1.r09.s1_R1.fastq 35.4MiB>
2021/07/08 13:18:35 scheduler task 5fc9f9e3 (flow 8a2bccd0): loaded val<.=c19584f6 35.4MiB>
2021/07/08 13:18:35 scheduler task 5fc9f9e3 (flow 8a2bccd0): loaded val<.=65c9e862 35.4MiB>
2021/07/08 13:18:35 scheduler task 5fc9f9e3 (flow 8a2bccd0): loading (try 0): successful, next state: submitting
2021/07/08 13:18:35 scheduler task 5fc9f9e3 (flow 8a2bccd0): submitting (try 0): started
2021/07/08 13:18:36 scheduler task 5fc9f9e3 (flow 8a2bccd0): submitting (try 0): successful, next state: waiting for completion
2021/07/08 13:18:36 scheduler task 5fc9f9e3 (flow 8a2bccd0): waiting for completion (try 0): started
2021/07/08 13:18:36  ->  n1.r09.s1.Main.out_file 8a2bccd0 exec   exec niemasd/vireflow:latest # Copy input files locally.mk..t" | pigz -1 -p 1 > "{{out}}"
2021/07/08 13:18:36 n1.r09.s1.Main.out_file 8a2bccd0 n1/r09/n1.r09.s1.rf:13:21:
	resources: {mem:1.0GiB cpu:1 disk:0B}
	sha256:417ae0981025bc903ae628d2287ea50cb5c93a86c9c3a837c605aa3b3302b301
	sha256:8a2bccd0d609ab2ef9d47132781bb0e6157ad4b2882a6b72425f3d521a80eb4c
	ec2-18-191-78-150.us-east-2.compute.amazonaws.com:9000/d1e2c64981855ad8/5fc9f9e34b3f6cd69bd13415ccc816f4fa513bb6505cbaa7b3299b362022d63b
	niemasd/vireflow:latest
	command:
	    # Copy input files locally
	    mkdir "n1.r09.s1_output"
	    wget -O "n1.r09.s1_output/n1.r09.s1.reference.fas" "https://raw.githubusercontent.com/niemasd/ViReflow/main/demo/NC_045512.2.fas"
	    wget -O "n1.r09.s1_output/n1.r09.s1.reference.gff" "https://raw.githubusercontent.com/niemasd/ViReflow/main/demo/NC_045512.2.gff3"
	    wget -O "n1.r09.s1_output/n1.r09.s1.primers.bed" "https://raw.githubusercontent.com/niemasd/ViReflow/main/demo/sarscov2_v2_primers_swift.bed"
	    cp "{{fq1}}" "n1.r09.s1_output/n1.r09.s1.fq1.fastq"
	    cp "{{fq2}}" "n1.r09.s1_output/n1.r09.s1.fq2.fastq"
	    
	    # Map reads using minimap2
	    minimap2 -t 1 -a -x sr "n1.r09.s1_output/n1.r09.s1.reference.fas" "n1.r09.s1_output/n1.r09.s1.fq1.fastq" "n1.r09.s1_output/n1.r09.s1.fq2.fastq" | samtools view -bS - > "n1.r09.s1_output/n1.r09.s1.untrimmed.bam"
	    
	    # Sort mapped reads
	    samtools sort --threads 1 -O bam -o "n1.r09.s1_output/n1.r09.s1.untrimmed.sorted.bam" "n1.r09.s1_output/n1.r09.s1.untrimmed.bam" 1>&2
	    
	    # Trim mapped reads using ivar
	    ivar trim -x 5 -e -i "n1.r09.s1_output/n1.r09.s1.untrimmed.sorted.bam" -b "n1.r09.s1_output/n1.r09.s1.primers.bed" -p "n1.r09.s1_output/n1.r09.s1.trimmed" 1>&2
	    
	    # Sort trimmed mapped reads
	    samtools sort --threads 1 -O bam -o "n1.r09.s1_output/n1.r09.s1.trimmed.sorted.bam" "n1.r09.s1_output/n1.r09.s1.trimmed.bam" 1>&2
	    
	    # Generate pile-up from sorted trimmed BAM
	    samtools mpileup -A -aa -d 0 -Q 0 --reference "n1.r09.s1_output/n1.r09.s1.reference.fas" "n1.r09.s1_output/n1.r09.s1.trimmed.sorted.bam" > "n1.r09.s1_output/n1.r09.s1.pileup.txt"
	    
	    # Call variants using lofreq"
	    lofreq call -f "n1.r09.s1_output/n1.r09.s1.reference.fas" --call-indels "n1.r09.s1_output/n1.r09.s1.trimmed.sorted.bam" > "n1.r09.s1_output/n1.r09.s1.variants.vcf"
	    
	    # Call depth from trimmed BAM
	    samtools depth -d 0 -Q 0 -q 0 -aa "n1.r09.s1_output/n1.r09.s1.trimmed.sorted.bam" > "n1.r09.s1_output/n1.r09.s1.depth.txt"
	    
	    # Find low-depth regions
	    low_depth_regions "n1.r09.s1_output/n1.r09.s1.depth.txt" "n1.r09.s1_output/n1.r09.s1.low_depth.tsv" 10 1>&2
	    
	    # Generate consensus sequence
	    alt_vars.py -i "n1.r09.s1_output/n1.r09.s1.variants.vcf" -o tmp.vcf -v lofreq
	    bgzip tmp.vcf
	    bcftools index tmp.vcf.gz
	    cat "n1.r09.s1_output/n1.r09.s1.reference.fas" | bcftools consensus -m "n1.r09.s1_output/n1.r09.s1.low_depth.tsv" tmp.vcf.gz > "n1.r09.s1_output/n1.r09.s1.consensus.fas"
	    
	    # Remove redundant output files before compressing
	    rm */*trimmed.bam
	    
	    # Compress output files
	    tar cvf - "n1.r09.s1_output" | pigz -1 -p 1 > "{{out}}"
	where:
	    {{fq1}} = 
	        . <zero> 35.4MiB
	    {{fq2}} = 
	        . <zero> 35.4MiB
2021/07/08 13:22:18 scheduler task 5fc9f9e3 (flow 8a2bccd0): waiting for completion (try 0): successful, next state: promoting objects
2021/07/08 13:22:18 scheduler task 5fc9f9e3 (flow 8a2bccd0): promoting objects (try 0): started
2021/07/08 13:22:18 scheduler task 5fc9f9e3 (flow 8a2bccd0): promoting objects (try 0): successful, next state: retrieving diagnostic output
2021/07/08 13:22:18 scheduler task 5fc9f9e3 (flow 8a2bccd0): retrieving diagnostic output (try 0): started
2021/07/08 13:22:18 scheduler task 5fc9f9e3 (flow 8a2bccd0): retrieving diagnostic output (try 0): successful, next state: retrieving result
2021/07/08 13:22:18 scheduler task 5fc9f9e3 (flow 8a2bccd0): retrieving result (try 0): started
2021/07/08 13:22:19 scheduler task 5fc9f9e3 (flow 8a2bccd0): retrieving result (try 0): successful, next state: transferring output
2021/07/08 13:22:19 scheduler task 5fc9f9e3 (flow 8a2bccd0): transferring output (try 0): started
2021/07/08 13:22:20 scheduler task 5fc9f9e3 (flow 8a2bccd0): transferring output (try 0): successful, next state: unloading
2021/07/08 13:22:20 scheduler task 5fc9f9e3 (flow 8a2bccd0): unloading (try 0): started
2021/07/08 13:22:20 scheduler task 5fc9f9e3 (flow 8a2bccd0): unloading list<val<.=dd1451d3 35.7MiB> 35.7MiB>
2021/07/08 13:22:20 scheduler task 5fc9f9e3 (flow 8a2bccd0): unloading val<.=c19584f6 35.4MiB>
2021/07/08 13:22:20 scheduler task 5fc9f9e3 (flow 8a2bccd0): unloading val<.=65c9e862 35.4MiB>
2021/07/08 13:22:20 scheduler task 5fc9f9e3 (flow 8a2bccd0): unloaded list<val<.=dd1451d3 35.7MiB> 35.7MiB>
2021/07/08 13:22:20 scheduler task 5fc9f9e3 (flow 8a2bccd0): unloaded val<.=65c9e862 35.4MiB>
2021/07/08 13:22:20 scheduler task 5fc9f9e3 (flow 8a2bccd0): unloaded val<.=c19584f6 35.4MiB>
2021/07/08 13:22:20 scheduler task 5fc9f9e3 (flow 8a2bccd0): unloading (try 0): successful, next state: complete
2021/07/08 13:22:20  <-  n1.r09.s1.Main.out_file 8a2bccd0 ok     exec 3m20s 35.7MiB
2021/07/08 13:22:20 n1.r09.s1.Main.out_file 8a2bccd0 n1/r09/n1.r09.s1.rf:13:21:
	resources: {mem:1.0GiB cpu:1 disk:0B}
	sha256:417ae0981025bc903ae628d2287ea50cb5c93a86c9c3a837c605aa3b3302b301
	sha256:8a2bccd0d609ab2ef9d47132781bb0e6157ad4b2882a6b72425f3d521a80eb4c
	ec2-18-191-78-150.us-east-2.compute.amazonaws.com:9000/d1e2c64981855ad8/5fc9f9e34b3f6cd69bd13415ccc816f4fa513bb6505cbaa7b3299b362022d63b
	niemasd/vireflow:latest
	command:
	    # Copy input files locally
	    mkdir "n1.r09.s1_output"
	    wget -O "n1.r09.s1_output/n1.r09.s1.reference.fas" "https://raw.githubusercontent.com/niemasd/ViReflow/main/demo/NC_045512.2.fas"
	    wget -O "n1.r09.s1_output/n1.r09.s1.reference.gff" "https://raw.githubusercontent.com/niemasd/ViReflow/main/demo/NC_045512.2.gff3"
	    wget -O "n1.r09.s1_output/n1.r09.s1.primers.bed" "https://raw.githubusercontent.com/niemasd/ViReflow/main/demo/sarscov2_v2_primers_swift.bed"
	    cp "{{fq1}}" "n1.r09.s1_output/n1.r09.s1.fq1.fastq"
	    cp "{{fq2}}" "n1.r09.s1_output/n1.r09.s1.fq2.fastq"
	    
	    # Map reads using minimap2
	    minimap2 -t 1 -a -x sr "n1.r09.s1_output/n1.r09.s1.reference.fas" "n1.r09.s1_output/n1.r09.s1.fq1.fastq" "n1.r09.s1_output/n1.r09.s1.fq2.fastq" | samtools view -bS - > "n1.r09.s1_output/n1.r09.s1.untrimmed.bam"
	    
	    # Sort mapped reads
	    samtools sort --threads 1 -O bam -o "n1.r09.s1_output/n1.r09.s1.untrimmed.sorted.bam" "n1.r09.s1_output/n1.r09.s1.untrimmed.bam" 1>&2
	    
	    # Trim mapped reads using ivar
	    ivar trim -x 5 -e -i "n1.r09.s1_output/n1.r09.s1.untrimmed.sorted.bam" -b "n1.r09.s1_output/n1.r09.s1.primers.bed" -p "n1.r09.s1_output/n1.r09.s1.trimmed" 1>&2
	    
	    # Sort trimmed mapped reads
	    samtools sort --threads 1 -O bam -o "n1.r09.s1_output/n1.r09.s1.trimmed.sorted.bam" "n1.r09.s1_output/n1.r09.s1.trimmed.bam" 1>&2
	    
	    # Generate pile-up from sorted trimmed BAM
	    samtools mpileup -A -aa -d 0 -Q 0 --reference "n1.r09.s1_output/n1.r09.s1.reference.fas" "n1.r09.s1_output/n1.r09.s1.trimmed.sorted.bam" > "n1.r09.s1_output/n1.r09.s1.pileup.txt"
	    
	    # Call variants using lofreq"
	    lofreq call -f "n1.r09.s1_output/n1.r09.s1.reference.fas" --call-indels "n1.r09.s1_output/n1.r09.s1.trimmed.sorted.bam" > "n1.r09.s1_output/n1.r09.s1.variants.vcf"
	    
	    # Call depth from trimmed BAM
	    samtools depth -d 0 -Q 0 -q 0 -aa "n1.r09.s1_output/n1.r09.s1.trimmed.sorted.bam" > "n1.r09.s1_output/n1.r09.s1.depth.txt"
	    
	    # Find low-depth regions
	    low_depth_regions "n1.r09.s1_output/n1.r09.s1.depth.txt" "n1.r09.s1_output/n1.r09.s1.low_depth.tsv" 10 1>&2
	    
	    # Generate consensus sequence
	    alt_vars.py -i "n1.r09.s1_output/n1.r09.s1.variants.vcf" -o tmp.vcf -v lofreq
	    bgzip tmp.vcf
	    bcftools index tmp.vcf.gz
	    cat "n1.r09.s1_output/n1.r09.s1.reference.fas" | bcftools consensus -m "n1.r09.s1_output/n1.r09.s1.low_depth.tsv" tmp.vcf.gz > "n1.r09.s1_output/n1.r09.s1.consensus.fas"
	    
	    # Remove redundant output files before compressing
	    rm */*trimmed.bam
	    
	    # Compress output files
	    tar cvf - "n1.r09.s1_output" | pigz -1 -p 1 > "{{out}}"
	where:
	    {{fq1}} = 
	        . <zero> 35.4MiB
	    {{fq2}} = 
	        . <zero> 35.4MiB
	result:
	    {{out}} =
	        . sha256:dd1451d312cb61102b59a83dca96f429afc9f245069cc945f173c02ccb22dc05 35.7MiB
	profile:
	    cpu mean=1.0 max=1.2
	    mem mean=16.0MiB max=124.3MiB
	    disk mean=8.9MiB max=35.7MiB
	    tmp mean=518B max=2.0KiB
2021/07/08 13:22:20 scheduler task bf68c0b7 (flow d1e71686): submitted with execconfig extern url s3://niema-test/n1/r09/n1.r09.s1.tar.gz resources {}
2021/07/08 13:22:20  ->  n1.r09.s1.Main.cp_out_file d1e71686 exec extern s3://niema-test/n1/r09/n1.r09.s1.tar.gz 35.7MiB
2021/07/08 13:22:21 scheduler task bf68c0b7 (flow d1e71686): direct transfer: completed s3://niema-test-quickstart-cache/objects/sha256:dd1451d312cb61102b59a83dca96f429afc9f245069cc945f173c02ccb22dc05 -> s3://niema-test/n1/r09/n1.r09.s1.tar.gz (35.7MiB) in 1s (35.7MiB/s) 
2021/07/08 13:22:21  <-  n1.r09.s1.Main.cp_out_file d1e71686 ok   extern 0s 35.7MiB
2021/07/08 13:22:21 total n=4 time=4m49s
	ident                      n   ncache transfer runtime(m) cpu         mem(GiB)    disk(GiB)   tmp(GiB) requested
	n1.r09.s1.Main.cp_out_file 1   0      0B                                                      
	n1.r09.s1.Main.fq1         1   0      0B                                                      
	n1.r09.s1.Main.fq2         1   0      0B                                                      
	n1.r09.s1.Main.out_file    1   0      0B       3/3/3      1.0/1.0/1.0 0.1/0.1/0.1 0.0/0.0/0.0 0.0/0.0/0.0 {mem:1.0GiB cpu:1 disk:0B}
	warning: reduce memory requirements for over-allocating execs: n1.r09.s1.Main.out_file
2021/07/08 13:22:21 result: [val<.=dd1451d3 35.7MiB>]
2021/07/08 13:22:21 waiting for 1 background tasks to complete
